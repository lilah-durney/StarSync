{"ast":null,"code":"var _jsxFileName = \"/Users/lilahdurney/Desktop/StarSync/src/pages/passwordreset/passwordreset.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { auth } from \"../../firebase\"; // Import your Firebase config\nimport { sendPasswordResetEmail } from \"firebase/auth\";\nimport { Link } from \"react-router-dom\";\nimport \"./passwordreset.css\"; // Import the matching CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordReset = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [notice, setNotice] = useState(\"\");\n  const handlePasswordReset = async e => {\n    e.preventDefault();\n    if (email === \"\") {\n      setNotice(\"Please enter an email address.\");\n      return;\n    }\n    try {\n      await sendPasswordResetEmail(auth, email);\n      setNotice(\"Password reset email sent! Please check your inbox.\");\n    } catch (error) {\n      setNotice(\"Error sending password reset email. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"reset-form\",\n      onSubmit: handlePasswordReset,\n      children: [notice && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notice\",\n        children: notice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"resetEmail\",\n          children: \"Enter your email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"resetEmail\",\n          type: \"email\",\n          placeholder: \"Enter your email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-link\",\n        children: [\"Remember your password? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Login here.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(PasswordReset, \"KOx9vfrm44e93NByEoxz7z6mz3s=\");\n_c = PasswordReset;\nexport default PasswordReset;\nvar _c;\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"names":["React","useState","auth","sendPasswordResetEmail","Link","jsxDEV","_jsxDEV","PasswordReset","_s","email","setEmail","notice","setNotice","handlePasswordReset","e","preventDefault","error","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","placeholder","value","onChange","target","to","_c","$RefreshReg$"],"sources":["/Users/lilahdurney/Desktop/StarSync/src/pages/passwordreset/passwordreset.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { auth } from \"../../firebase\"; // Import your Firebase config\nimport { sendPasswordResetEmail } from \"firebase/auth\";\nimport { Link } from \"react-router-dom\";\nimport \"./passwordreset.css\"; // Import the matching CSS file\n\nconst PasswordReset = () => {\n  const [email, setEmail] = useState(\"\");\n  const [notice, setNotice] = useState(\"\");\n\n  const handlePasswordReset = async (e) => {\n    e.preventDefault();\n\n    if (email === \"\") {\n      setNotice(\"Please enter an email address.\");\n      return;\n    }\n\n    try {\n      await sendPasswordResetEmail(auth, email);\n      setNotice(\"Password reset email sent! Please check your inbox.\");\n    } catch (error) {\n      setNotice(\"Error sending password reset email. Please try again.\");\n    }\n  };\n\n  return (\n    <div className=\"reset-container\">\n      <form className=\"reset-form\" onSubmit={handlePasswordReset}>\n        {notice && (\n          <div className=\"notice\">\n            {notice}\n          </div>\n        )}\n        <div className=\"input-group\">\n          <label htmlFor=\"resetEmail\">Enter your email address</label>\n          <input\n            id=\"resetEmail\"\n            type=\"email\"\n            placeholder=\"Enter your email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </div>\n        <button type=\"submit\" className=\"submit-button\">Reset Password</button>\n        <div className=\"login-link\">\n          Remember your password? <Link to=\"/login\">Login here.</Link>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default PasswordReset;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,gBAAgB,CAAC,CAAC;AACvC,SAASC,sBAAsB,QAAQ,eAAe;AACtD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,qBAAqB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMY,mBAAmB,GAAG,MAAOC,CAAC,IAAK;IACvCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAIN,KAAK,KAAK,EAAE,EAAE;MAChBG,SAAS,CAAC,gCAAgC,CAAC;MAC3C;IACF;IAEA,IAAI;MACF,MAAMT,sBAAsB,CAACD,IAAI,EAAEO,KAAK,CAAC;MACzCG,SAAS,CAAC,qDAAqD,CAAC;IAClE,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdJ,SAAS,CAAC,uDAAuD,CAAC;IACpE;EACF,CAAC;EAED,oBACEN,OAAA;IAAKW,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC9BZ,OAAA;MAAMW,SAAS,EAAC,YAAY;MAACE,QAAQ,EAAEN,mBAAoB;MAAAK,QAAA,GACxDP,MAAM,iBACLL,OAAA;QAAKW,SAAS,EAAC,QAAQ;QAAAC,QAAA,EACpBP;MAAM;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CACN,eACDjB,OAAA;QAAKW,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1BZ,OAAA;UAAOkB,OAAO,EAAC,YAAY;UAAAN,QAAA,EAAC;QAAwB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC5DjB,OAAA;UACEmB,EAAE,EAAC,YAAY;UACfC,IAAI,EAAC,OAAO;UACZC,WAAW,EAAC,kBAAkB;UAC9BC,KAAK,EAAEnB,KAAM;UACboB,QAAQ,EAAGf,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACgB,MAAM,CAACF,KAAK;QAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNjB,OAAA;QAAQoB,IAAI,EAAC,QAAQ;QAACT,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACvEjB,OAAA;QAAKW,SAAS,EAAC,YAAY;QAAAC,QAAA,GAAC,0BACF,eAAAZ,OAAA,CAACF,IAAI;UAAC2B,EAAE,EAAC,QAAQ;UAAAb,QAAA,EAAC;QAAW;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACf,EAAA,CA7CID,aAAa;AAAAyB,EAAA,GAAbzB,aAAa;AA+CnB,eAAeA,aAAa;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}