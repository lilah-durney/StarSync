{"ast":null,"code":"var _jsxFileName = \"/Users/lilahdurney/Desktop/StarSync/src/pages/login/login.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { getAuth, GoogleAuthProvider, EmailAuthProvider, onAuthStateChanged } from 'firebase/auth';\nimport firebase from \"firebase/compat/app\";\nimport * as firebaseui from \"firebaseui\";\nimport \"firebaseui/dist/firebaseui.css\";\nimport { app } from \"../../firebase\";\nimport { useNavigate } from \"react-router-dom\";\nimport { auth, db } from \"../../firebase\";\nimport { doc, setDoc, getDoc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const ui = firebaseui.auth.AuthUI.getInstance() || new firebaseui.auth.AuthUI(getAuth(app));\n    ui.start(\"#firebaseui-auth-container\", {\n      signInOptions: [{\n        provider: GoogleAuthProvider.PROVIDER_ID,\n        customParameters: {\n          prompt: \"select_account\"\n        }\n      }, {\n        provider: EmailAuthProvider.PROVIDER_ID\n      }],\n      signInSuccessUrl: \"/inputprofile\"\n    });\n    console.log('Setting up onAuthStateChanged listener...');\n    const unsubscribe = onAuthStateChanged(auth, async user => {\n      console.log('Auth state changed, user:', user);\n      if (user) {\n        console.log('User is logged in:', user);\n\n        // Check if the user document exists in Firestore\n        const userRef = doc(db, \"users\", user.uid);\n        const docSnap = await getDoc(userRef);\n        if (!docSnap.exists()) {\n          console.log(\"New user detected, creating user document\");\n          // If document doesn't exist, create it and navigate to the profile page\n          await setDoc(userRef, {\n            uid: user.uid,\n            email: user.email,\n            profileComplete: false,\n            createdAt: new Date()\n          });\n          navigate(\"/inputprofile\");\n        } else if (docSnap.data().profileComplete) {\n          navigate(\"/home\");\n        } else {\n          navigate(\"input\");\n        }\n\n        //Navigate based on profile completion status.\n        const userData = docSnap.data();\n        if (userData && userData.profileComplete) {\n          navigate(\"/home\");\n        } else {\n          navigate(\"/inputprofile\");\n        }\n      } else {\n        // If user is not logged in, have them login\n        navigate(\"/login\");\n      }\n    });\n    return () => {\n      console.log('Cleaning up auth state listener...');\n      unsubscribe();\n    };\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"firebaseui-auth-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 8\n  }, this);\n}\n_s(Login, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useEffect","getAuth","GoogleAuthProvider","EmailAuthProvider","onAuthStateChanged","firebase","firebaseui","app","useNavigate","auth","db","doc","setDoc","getDoc","jsxDEV","_jsxDEV","Login","_s","navigate","ui","AuthUI","getInstance","start","signInOptions","provider","PROVIDER_ID","customParameters","prompt","signInSuccessUrl","console","log","unsubscribe","user","userRef","uid","docSnap","exists","email","profileComplete","createdAt","Date","data","userData","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lilahdurney/Desktop/StarSync/src/pages/login/login.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { getAuth, GoogleAuthProvider, EmailAuthProvider, onAuthStateChanged } from 'firebase/auth'; \nimport firebase from \"firebase/compat/app\";\nimport * as firebaseui from \"firebaseui\";\nimport \"firebaseui/dist/firebaseui.css\";\nimport {app} from \"../../firebase\";\nimport {useNavigate} from \"react-router-dom\";\nimport {auth,db} from \"../../firebase\";\nimport { doc, setDoc, getDoc } from \"firebase/firestore\";\n\nfunction Login() {\n    const navigate = useNavigate();\n    useEffect(() => {\n        const ui = firebaseui.auth.AuthUI.getInstance() || new firebaseui.auth.AuthUI(getAuth(app));\n    \n        ui.start(\"#firebaseui-auth-container\", {\n            signInOptions: [\n                {\n                    provider: GoogleAuthProvider.PROVIDER_ID,\n                    customParameters: {\n                        prompt: \"select_account\",\n                    },\n                },\n                {\n                    provider: EmailAuthProvider.PROVIDER_ID,\n                },\n            ],\n            signInSuccessUrl: \"/inputprofile\",\n        });\n    \n        console.log('Setting up onAuthStateChanged listener...');\n        const unsubscribe = onAuthStateChanged(auth, async (user) => {\n            console.log('Auth state changed, user:', user);\n            if (user) {\n                console.log('User is logged in:', user);\n\n                // Check if the user document exists in Firestore\n                const userRef = doc(db, \"users\", user.uid);\n                const docSnap = await getDoc(userRef);\n    \n                if (!docSnap.exists()) {\n                    console.log(\"New user detected, creating user document\");\n                    // If document doesn't exist, create it and navigate to the profile page\n                    await setDoc(userRef, {\n                        uid: user.uid,\n                        email: user.email,\n                        profileComplete: false,\n                        createdAt: new Date(),\n                    });\n                    navigate(\"/inputprofile\");\n                } else if (docSnap.data().profileComplete) {\n                    navigate(\"/home\");\n                } else {\n                    navigate(\"input\")\n                }\n\n                //Navigate based on profile completion status.\n                const userData = docSnap.data();\n                if (userData && userData.profileComplete) {\n                    navigate(\"/home\");\n                } else {\n                    navigate(\"/inputprofile\");\n                }\n\n            } else {\n                // If user is not logged in, have them login\n                navigate(\"/login\");\n            }\n        });\n\n \n    return () => {\n        console.log('Cleaning up auth state listener...');\n        unsubscribe(); \n    \n    };\n}, [navigate]);\n\n\n\n\n\nreturn <div id=\"firebaseui-auth-container\"></div>\n\n\n\n\n}\n\nexport default Login"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}