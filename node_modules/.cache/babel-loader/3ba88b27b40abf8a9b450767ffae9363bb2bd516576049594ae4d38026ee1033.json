{"ast":null,"code":"\n\n// function Login() {\n//     const navigate = useNavigate();\n\n//     useEffect(() => {\n//         // Initialize FirebaseUI Auth instance\n//         const ui = firebaseui.auth.AuthUI.getInstance() || new firebaseui.auth.AuthUI(getAuth(app));\n//         ui.start(\"#firebaseui-auth-container\", {\n//             signInOptions: [\n//                 {\n//                     provider: GoogleAuthProvider.PROVIDER_ID,\n//                     customParameters: { prompt: \"select_account\" },\n//                 },\n//                 { provider: EmailAuthProvider.PROVIDER_ID },\n//             ],\n//             signInSuccessUrl: \"/inputprofile\", // Default URL on sign-in success\n//         });\n\n//         console.log(\"Setting up onAuthStateChanged listener...\");\n\n//         // Listen to authentication state changes\n//         const unsubscribe = onAuthStateChanged(auth, async (user) => {\n//             if (!user) {\n//                 console.log(\"User is logged in:\", user);\n//                 navigate(\"/login\")\n//             }\n//         });\n\n//         // Cleanup on component unmount\n//         return () => {\n//             unsubscribe();\n\n//         };\n//     }, [navigate]);\n\n//     return <div id=\"firebaseui-auth-container\"></div>;\n// }\n\n// export default Login;\n\n// try {\n//     // Reference the user document in Firestore\n//     const userRef = doc(db, \"users\", user.uid);\n//     const docSnap = await getDoc(userRef);\n\n//     if (!docSnap.exists()) {\n//         console.log(\"New user detected. Creating user document...\");\n//         await setDoc(userRef, {\n//             uid: user.uid,\n//             email: user.email,\n//             profileComplete: false,\n//             createdAt: new Date(),\n//         });\n//         navigate(\"/inputprofile\");\n//     } else if (docSnap.data().profileComplete) {\n//         console.log(\"Profile is complete. Redirecting to home...\");\n//         navigate(\"/home\");\n//     } else {\n//         console.log(\"Profile incomplete. Redirecting to profile input...\");\n//         navigate(\"/inputprofile\");\n//     }\n// } catch (error) {\n//     console.error(\"Error handling user login:\", error);\n// }\n// } else {\n//     console.log(\"No user logged in. Redirecting to login...\");\n//     navigate(\"/login\");\n// }","map":{"version":3,"names":[],"sources":["/Users/lilahdurney/Desktop/StarSync/src/pages/login/login.js"],"sourcesContent":["\n\n// function Login() {\n//     const navigate = useNavigate();\n\n//     useEffect(() => {\n//         // Initialize FirebaseUI Auth instance\n//         const ui = firebaseui.auth.AuthUI.getInstance() || new firebaseui.auth.AuthUI(getAuth(app));\n//         ui.start(\"#firebaseui-auth-container\", {\n//             signInOptions: [\n//                 {\n//                     provider: GoogleAuthProvider.PROVIDER_ID,\n//                     customParameters: { prompt: \"select_account\" },\n//                 },\n//                 { provider: EmailAuthProvider.PROVIDER_ID },\n//             ],\n//             signInSuccessUrl: \"/inputprofile\", // Default URL on sign-in success\n//         });\n\n//         console.log(\"Setting up onAuthStateChanged listener...\");\n\n//         // Listen to authentication state changes\n//         const unsubscribe = onAuthStateChanged(auth, async (user) => {\n//             if (!user) {\n//                 console.log(\"User is logged in:\", user);\n//                 navigate(\"/login\")\n//             }\n//         });\n\n//         // Cleanup on component unmount\n//         return () => {\n//             unsubscribe();\n            \n//         };\n//     }, [navigate]);\n\n//     return <div id=\"firebaseui-auth-container\"></div>;\n// }\n\n// export default Login;\n\n\n\n                // try {\n                //     // Reference the user document in Firestore\n                //     const userRef = doc(db, \"users\", user.uid);\n                //     const docSnap = await getDoc(userRef);\n\n                //     if (!docSnap.exists()) {\n                //         console.log(\"New user detected. Creating user document...\");\n                //         await setDoc(userRef, {\n                //             uid: user.uid,\n                //             email: user.email,\n                //             profileComplete: false,\n                //             createdAt: new Date(),\n                //         });\n                //         navigate(\"/inputprofile\");\n                //     } else if (docSnap.data().profileComplete) {\n                //         console.log(\"Profile is complete. Redirecting to home...\");\n                //         navigate(\"/home\");\n                //     } else {\n                //         console.log(\"Profile incomplete. Redirecting to profile input...\");\n                //         navigate(\"/inputprofile\");\n                //     }\n                // } catch (error) {\n                //     console.error(\"Error handling user login:\", error);\n                // }\n            // } else {\n            //     console.log(\"No user logged in. Redirecting to login...\");\n            //     navigate(\"/login\");\n            // }"],"mappings":";;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAIgB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}