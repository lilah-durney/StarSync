{"ast":null,"code":"var _jsxFileName = \"/Users/lilahdurney/Desktop/StarSync/src/pages/login/login.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { getAuth, GoogleAuthProvider, EmailAuthProvider, onAuthStateChanged } from 'firebase/auth';\nimport firebase from \"firebase/compat/app\";\nimport * as firebaseui from \"firebaseui\";\nimport \"firebaseui/dist/firebaseui.css\";\nimport { app } from \"../../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  useEffect(() => {\n    //Initilize FirebaseUI Auth instance\n    const ui = firebaseui.auth.AuthUI.getInstance() || new firebaseui.auth.AuthUI(getAuth(app));\n    ui.start(\"#firebaseui-auth-container\", {\n      signInOptions: [{\n        provider: GoogleAuthProvider.PROVIDER_ID,\n        customParameters: {\n          prompt: \"select_account\"\n        }\n      }, {\n        provider: EmailAuthProvider.PROVIDER_ID\n      }],\n      signInSuccessUrl: \"/inputprofile\"\n    });\n  }, []);\n\n  //Check if user has logged in before\n  const auth = getAuth(app);\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      //If the user exists, check if they've completed their profile w/ bday info\n      const userRef = firebase.database().ref(\"users/\" + user.uid);\n      userRef.once(\"value\", snapshot => {\n        const userData = snapshot.val();\n        if (userData && userData.profileComplete) {\n          //If profileComplete is true, then redeirct to User Home\n        }\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"firebaseui-auth-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useEffect","getAuth","GoogleAuthProvider","EmailAuthProvider","onAuthStateChanged","firebase","firebaseui","app","jsxDEV","_jsxDEV","Login","_s","ui","auth","AuthUI","getInstance","start","signInOptions","provider","PROVIDER_ID","customParameters","prompt","signInSuccessUrl","user","userRef","database","ref","uid","once","snapshot","userData","val","profileComplete","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lilahdurney/Desktop/StarSync/src/pages/login/login.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { getAuth, GoogleAuthProvider, EmailAuthProvider, onAuthStateChanged } from 'firebase/auth'; \nimport firebase from \"firebase/compat/app\";\nimport * as firebaseui from \"firebaseui\";\nimport \"firebaseui/dist/firebaseui.css\";\nimport {app} from \"../../firebase\";\n\nfunction Login() {\n    \n    useEffect(() => {\n        //Initilize FirebaseUI Auth instance\n        const ui = \n            firebaseui.auth.AuthUI.getInstance() ||\n            new firebaseui.auth.AuthUI(getAuth(app));\n\n    ui.start(\"#firebaseui-auth-container\", {\n        signInOptions: [\n            {\n                provider: GoogleAuthProvider.PROVIDER_ID,\n                customParameters: {\n                  prompt: \"select_account\",\n                },\n              },\n            {\n                provider: EmailAuthProvider.PROVIDER_ID\n            }\n        ],\n        signInSuccessUrl: \"/inputprofile\",\n    });\n    },[]);\n\n\n    //Check if user has logged in before\n    const auth =getAuth(app);\n    onAuthStateChanged(auth, (user) => {\n        if (user) {\n            //If the user exists, check if they've completed their profile w/ bday info\n            const userRef = firebase.database().ref(\"users/\" +user.uid);\n            userRef.once(\"value\", (snapshot) => {\n                const userData = snapshot.val();\n                if (userData && userData.profileComplete) {\n                    //If profileComplete is true, then redeirct to User Home\n                    \n                }\n            })\n        }\n    })\n    return (\n    \n    <div id =\"firebaseui-auth-container\"></div>\n    );\n\n\n\n}\n\nexport default Login"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,OAAO,EAAEC,kBAAkB,EAAEC,iBAAiB,EAAEC,kBAAkB,QAAQ,eAAe;AAClG,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAO,KAAKC,UAAU,MAAM,YAAY;AACxC,OAAO,gCAAgC;AACvC,SAAQC,GAAG,QAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAEbX,SAAS,CAAC,MAAM;IACZ;IACA,MAAMY,EAAE,GACJN,UAAU,CAACO,IAAI,CAACC,MAAM,CAACC,WAAW,CAAC,CAAC,IACpC,IAAIT,UAAU,CAACO,IAAI,CAACC,MAAM,CAACb,OAAO,CAACM,GAAG,CAAC,CAAC;IAEhDK,EAAE,CAACI,KAAK,CAAC,4BAA4B,EAAE;MACnCC,aAAa,EAAE,CACX;QACIC,QAAQ,EAAEhB,kBAAkB,CAACiB,WAAW;QACxCC,gBAAgB,EAAE;UAChBC,MAAM,EAAE;QACV;MACF,CAAC,EACH;QACIH,QAAQ,EAAEf,iBAAiB,CAACgB;MAChC,CAAC,CACJ;MACDG,gBAAgB,EAAE;IACtB,CAAC,CAAC;EACF,CAAC,EAAC,EAAE,CAAC;;EAGL;EACA,MAAMT,IAAI,GAAEZ,OAAO,CAACM,GAAG,CAAC;EACxBH,kBAAkB,CAACS,IAAI,EAAGU,IAAI,IAAK;IAC/B,IAAIA,IAAI,EAAE;MACN;MACA,MAAMC,OAAO,GAAGnB,QAAQ,CAACoB,QAAQ,CAAC,CAAC,CAACC,GAAG,CAAC,QAAQ,GAAEH,IAAI,CAACI,GAAG,CAAC;MAC3DH,OAAO,CAACI,IAAI,CAAC,OAAO,EAAGC,QAAQ,IAAK;QAChC,MAAMC,QAAQ,GAAGD,QAAQ,CAACE,GAAG,CAAC,CAAC;QAC/B,IAAID,QAAQ,IAAIA,QAAQ,CAACE,eAAe,EAAE;UACtC;QAAA;MAGR,CAAC,CAAC;IACN;EACJ,CAAC,CAAC;EACF,oBAEAvB,OAAA;IAAKwB,EAAE,EAAE;EAA2B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAK/C;AAAC1B,EAAA,CA/CQD,KAAK;AAAA4B,EAAA,GAAL5B,KAAK;AAiDd,eAAeA,KAAK;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}