{"ast":null,"code":"var _jsxFileName = \"/Users/lilahdurney/Desktop/StarSync/src/pages/login/login.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { getAuth, GoogleAuthProvider, EmailAuthProvider, onAuthStateChanged } from \"firebase/auth\";\nimport firebase from \"firebase/compat/app\";\nimport * as firebaseui from \"firebaseui\";\nimport \"firebaseui/dist/firebaseui.css\";\nimport { app } from \"../../firebase\";\nimport { useNavigate } from \"react-router-dom\";\nimport { auth, db } from \"../../firebase\";\nimport { doc, setDoc, getDoc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Initialize FirebaseUI Auth instance\n    const ui = firebaseui.auth.AuthUI.getInstance() || new firebaseui.auth.AuthUI(getAuth(app));\n    ui.start(\"#firebaseui-auth-container\", {\n      signInOptions: [{\n        provider: GoogleAuthProvider.PROVIDER_ID,\n        customParameters: {\n          prompt: \"select_account\"\n        }\n      }, {\n        provider: EmailAuthProvider.PROVIDER_ID\n      }],\n      signInSuccessUrl: \"/inputprofile\" // Default URL on sign-in success\n    });\n    console.log(\"Setting up onAuthStateChanged listener...\");\n\n    // Listen to authentication state changes\n    const unsubscribe = onAuthStateChanged(auth, async user => {\n      if (user) {\n        console.log(\"User is logged in:\", user);\n\n        // try {\n        //     // Reference the user document in Firestore\n        //     const userRef = doc(db, \"users\", user.uid);\n        //     const docSnap = await getDoc(userRef);\n\n        //     if (!docSnap.exists()) {\n        //         console.log(\"New user detected. Creating user document...\");\n        //         await setDoc(userRef, {\n        //             uid: user.uid,\n        //             email: user.email,\n        //             profileComplete: false,\n        //             createdAt: new Date(),\n        //         });\n        //         navigate(\"/inputprofile\");\n        //     } else if (docSnap.data().profileComplete) {\n        //         console.log(\"Profile is complete. Redirecting to home...\");\n        //         navigate(\"/home\");\n        //     } else {\n        //         console.log(\"Profile incomplete. Redirecting to profile input...\");\n        //         navigate(\"/inputprofile\");\n        //     }\n        // } catch (error) {\n        //     console.error(\"Error handling user login:\", error);\n        // }\n      } else {\n        console.log(\"No user logged in. Redirecting to login...\");\n        navigate(\"/login\");\n      }\n    });\n\n    // Cleanup on component unmount\n    return () => {\n      console.log(\"Cleaning up auth state listener...\");\n      unsubscribe();\n    };\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"firebaseui-auth-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 12\n  }, this);\n}\n_s(Login, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useEffect","getAuth","GoogleAuthProvider","EmailAuthProvider","onAuthStateChanged","firebase","firebaseui","app","useNavigate","auth","db","doc","setDoc","getDoc","jsxDEV","_jsxDEV","Login","_s","navigate","ui","AuthUI","getInstance","start","signInOptions","provider","PROVIDER_ID","customParameters","prompt","signInSuccessUrl","console","log","unsubscribe","user","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lilahdurney/Desktop/StarSync/src/pages/login/login.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport { getAuth, GoogleAuthProvider, EmailAuthProvider, onAuthStateChanged } from \"firebase/auth\";\nimport firebase from \"firebase/compat/app\";\nimport * as firebaseui from \"firebaseui\";\nimport \"firebaseui/dist/firebaseui.css\";\nimport { app } from \"../../firebase\";\nimport { useNavigate } from \"react-router-dom\";\nimport { auth, db } from \"../../firebase\";\nimport { doc, setDoc, getDoc } from \"firebase/firestore\";\n\nfunction Login() {\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        // Initialize FirebaseUI Auth instance\n        const ui = firebaseui.auth.AuthUI.getInstance() || new firebaseui.auth.AuthUI(getAuth(app));\n        ui.start(\"#firebaseui-auth-container\", {\n            signInOptions: [\n                {\n                    provider: GoogleAuthProvider.PROVIDER_ID,\n                    customParameters: { prompt: \"select_account\" },\n                },\n                { provider: EmailAuthProvider.PROVIDER_ID },\n            ],\n            signInSuccessUrl: \"/inputprofile\", // Default URL on sign-in success\n        });\n\n        console.log(\"Setting up onAuthStateChanged listener...\");\n\n        // Listen to authentication state changes\n        const unsubscribe = onAuthStateChanged(auth, async (user) => {\n            if (user) {\n                console.log(\"User is logged in:\", user);\n                \n\n                // try {\n                //     // Reference the user document in Firestore\n                //     const userRef = doc(db, \"users\", user.uid);\n                //     const docSnap = await getDoc(userRef);\n\n                //     if (!docSnap.exists()) {\n                //         console.log(\"New user detected. Creating user document...\");\n                //         await setDoc(userRef, {\n                //             uid: user.uid,\n                //             email: user.email,\n                //             profileComplete: false,\n                //             createdAt: new Date(),\n                //         });\n                //         navigate(\"/inputprofile\");\n                //     } else if (docSnap.data().profileComplete) {\n                //         console.log(\"Profile is complete. Redirecting to home...\");\n                //         navigate(\"/home\");\n                //     } else {\n                //         console.log(\"Profile incomplete. Redirecting to profile input...\");\n                //         navigate(\"/inputprofile\");\n                //     }\n                // } catch (error) {\n                //     console.error(\"Error handling user login:\", error);\n                // }\n            } else {\n                console.log(\"No user logged in. Redirecting to login...\");\n                navigate(\"/login\");\n            }\n        });\n\n        // Cleanup on component unmount\n        return () => {\n            console.log(\"Cleaning up auth state listener...\");\n            unsubscribe();\n            \n        };\n    }, [navigate]);\n\n    return <div id=\"firebaseui-auth-container\"></div>;\n}\n\nexport default Login;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,OAAO,EAAEC,kBAAkB,EAAEC,iBAAiB,EAAEC,kBAAkB,QAAQ,eAAe;AAClG,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAO,KAAKC,UAAU,MAAM,YAAY;AACxC,OAAO,gCAAgC;AACvC,SAASC,GAAG,QAAQ,gBAAgB;AACpC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,IAAI,EAAEC,EAAE,QAAQ,gBAAgB;AACzC,SAASC,GAAG,EAAEC,MAAM,EAAEC,MAAM,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9BR,SAAS,CAAC,MAAM;IACZ;IACA,MAAMmB,EAAE,GAAGb,UAAU,CAACG,IAAI,CAACW,MAAM,CAACC,WAAW,CAAC,CAAC,IAAI,IAAIf,UAAU,CAACG,IAAI,CAACW,MAAM,CAACnB,OAAO,CAACM,GAAG,CAAC,CAAC;IAC3FY,EAAE,CAACG,KAAK,CAAC,4BAA4B,EAAE;MACnCC,aAAa,EAAE,CACX;QACIC,QAAQ,EAAEtB,kBAAkB,CAACuB,WAAW;QACxCC,gBAAgB,EAAE;UAAEC,MAAM,EAAE;QAAiB;MACjD,CAAC,EACD;QAAEH,QAAQ,EAAErB,iBAAiB,CAACsB;MAAY,CAAC,CAC9C;MACDG,gBAAgB,EAAE,eAAe,CAAE;IACvC,CAAC,CAAC;IAEFC,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;;IAExD;IACA,MAAMC,WAAW,GAAG3B,kBAAkB,CAACK,IAAI,EAAE,MAAOuB,IAAI,IAAK;MACzD,IAAIA,IAAI,EAAE;QACNH,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEE,IAAI,CAAC;;QAGvC;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACJ,CAAC,MAAM;QACHH,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;QACzDZ,QAAQ,CAAC,QAAQ,CAAC;MACtB;IACJ,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACTW,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;MACjDC,WAAW,CAAC,CAAC;IAEjB,CAAC;EACL,CAAC,EAAE,CAACb,QAAQ,CAAC,CAAC;EAEd,oBAAOH,OAAA;IAAKkB,EAAE,EAAC;EAA2B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACrD;AAACpB,EAAA,CAhEQD,KAAK;EAAA,QACOR,WAAW;AAAA;AAAA8B,EAAA,GADvBtB,KAAK;AAkEd,eAAeA,KAAK;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}